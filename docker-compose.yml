networks:
  app-network:
    driver: bridge

volumes:
  pg_data_17:

services:
  api:
    build:
      context: .
      dockerfile: api.Dockerfile
    image: ${API_IMAGE_NAME:-mock_api}
    mem_limit: 500M
    cpu_shares: 512
    profiles:
      - app
      - api
      - all
    environment:
      - HOST=${HOST:-0.0.0.0}
      - PORT=${PORT:-8000}
      - MIN_LOG_LEVEL=${MIN_LOG_LEVEL:-info}

      - REDIS_HOST=${REDIS_HOST:-mem_db}
      - REDIS_PORT=${REDIS_PORT:-6379}

      - POSTGRES_HOST=${POSTGRES_HOST:-sql_db}
      - POSTGRES_PORT=${POSTGRES_PORT:-5432}
      - POSTGRES_USER=${POSTGRES_USER:-pguser}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-pgpwd}
      - POSTGRES_DB=${POSTGRES_DB:-dev}
    depends_on:
      mem_db:
        condition: service_started
      sql_db:
        condition: service_healthy
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
    networks:
      - app-network

  load_balancer:
    image: nginx:1-alpine
    mem_limit: 256M
    cpu_shares: 512
    profiles:
      - app
      - all
    depends_on:
      - api
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - "${LOAD_BALANCER_PORT:-8000}:80"
    networks:
      - app-network
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure

  mem_db:
    image: redis:7-alpine
    mem_limit: 500M
    cpu_shares: 1024
    profiles:
      - db
      - all
    networks:
      - app-network
    ports:
      - 16379:6379
    deploy:
      restart_policy:
        condition: on-failure
    healthcheck:
      test: |
        redis-cli --raw incr ping
      interval: 5s
      timeout: 2s
      retries: 3
      # start_period: 1s

  sql_db:
    image: postgres:17-alpine
    mem_limit: 1G
    cpu_shares: 1024
    profiles:
      - db
      - all
    environment:
      - POSTGRES_HOST_AUTH_METHOD=trust
      - POSTGRES_USER=${POSTGRES_USER:-pguser}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-pgpwd}
      - POSTGRES_DB=${POSTGRES_DB:-dev}
    networks:
      - app-network
    ports:
      - 15432:5432
    volumes:
      - pg_data_17:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-pguser} -d ${POSTGRES_DB:-dev}"]
      interval: 5s
      timeout: 15s
      retries: 10
    deploy:
      restart_policy:
        condition: on-failure
