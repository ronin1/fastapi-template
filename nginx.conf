events { }

http {
    upstream api_servers {
        # Dynamically discover app instances
        server api:8000 fail_timeout=5s;
    }

    upstream worker_servers {
        # Dynamically discover app instances
        server worker:8000 fail_timeout=60s;
    }

    server {
        listen 80;

        location / {
            add_header Content-Type application/json;

            return 200 '{"message": "Load Balancer say: Hello! ðŸ‘‹"}';
        }

        location /worker {
            proxy_pass http://worker_servers;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /color {
            proxy_pass http://api_servers;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }
}